plugins {
    id "java"
    id "groovy"
    id "org.jenkins-ci.jpi" version "0.47.0"
}

extensions.findByName("buildScan")?.with {
    setProperty("termsOfServiceUrl", "https://gradle.com/terms-of-service")
    setProperty("termsOfServiceAgree", "yes")
}

java {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_11
}

jenkinsPlugin {
    jenkinsVersion = (rootProject.file("Dockerfile").text =~ /JENKINS_VERSION=([0-9.]+)/)[0][1]
    fileExtension = "jpi"
}

test {
    reports {
        junitXml.enabled = true
        html.enabled = false
    }
}

ext {
    // Pull versions out of the plugins.txt to use in dependency resolution
    // TODO: when we break out the plugin into a separate entity we will want minimum versions not synch'd versions
    PLUGIN_VERSIONS = file("resources/plugins.txt")
            .text
            .split("\n")
            .findAll { !it.trim().isEmpty() }
            .collectEntries { plugin ->
                String[] parts = plugin.split(":")
                return [(parts[0]): parts[1]]
            }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (!details.requested.version && PLUGIN_VERSIONS[details.requested.name]) {
            details.useVersion PLUGIN_VERSIONS[details.requested.name]
        }
    }
}

dependencies {
    api "org.jenkins-ci.plugins:branch-api"
    api "org.jenkins-ci.plugins:credentials-binding"
    api "org.jenkins-ci.plugins:github-branch-source"

    implementation "org.jenkins-ci.plugins:git"
    implementation "org.jenkins-ci.plugins.workflow:workflow-job"
    implementation "io.jenkins.plugins:pipeline-groovy-lib:629.vb_5627b_ee2104"
    implementation "org.jenkins-ci.plugins:pipeline-github"
    implementation "org.jenkins-ci.plugins:github-api:1.303-400.v35c2d8258028"

    testImplementation localGroovy()
    testImplementation "org.spockframework:spock-core:2.3-groovy-3.0"
    testImplementation "org.spockframework:spock-junit4:2.3-groovy-3.0"
    testImplementation "cglib:cglib-nodep:3.3.0"
    testImplementation "org.objenesis:objenesis:3.2"
    testImplementation "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"

    testImplementation "org.jenkins-ci.plugins.workflow:workflow-api:1200.v8005c684b_a_c6"
    testImplementation "org.jenkins-ci.plugins.workflow:workflow-basic-steps:994.vd57e3ca_46d24"
    testImplementation "org.jenkins-ci.plugins.workflow:workflow-cps:3601.v9b_36a_d99e1cc"
    testImplementation "org.jenkins-ci.plugins.workflow:workflow-scm-step:400.v6b_89a_1317c9a_"
    testImplementation "org.jenkins-ci.plugins:cloudbees-folder:6.800.v71307ca_b_986b"
    testImplementation "org.jenkins-ci.plugins:token-macro:321.vd7cc1f2a_52c8"
}

test {
    useJUnitPlatform()
}
